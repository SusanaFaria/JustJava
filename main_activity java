package com.example.android.justjava;

import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import java.text.NumberFormat;

/**
 * This app displays an order form to order coffee.
 */
public class MainActivity extends AppCompatActivity {

    int quantity = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }

    /**
     * This method increments the quantity when the + button is clicked
     */
    public void increment(View View) {
        if (quantity == 100) {
            //display error message
            Context context = getApplicationContext();
            CharSequence text = getString(R.string.tooMuchCoffee);
            int duration = Toast.LENGTH_SHORT;

            Toast toast = Toast.makeText(context, text, duration);
            toast.show();
            //exit this method because there's nothing left to do
            return;
        }
        quantity = quantity + 1;
        displayQuantity(quantity);
    }

    /**
     * This method decrements the quantity when the - button is clicked
     */
    public void decrement(View View) {
        if (quantity == 1) {
            //display error message
            Toast.makeText(this, getString(R.string.tooFewCoffees), Toast.LENGTH_SHORT).show();

            //exit this method because there's nothing left to do
            return;
        }
        quantity = quantity - 1;
        displayQuantity(quantity);
    }

    /**
     * This method is called when the order button is clicked.
     */
    public void submitOrder(View view) {
        // find if user wants Cream
        CheckBox WhCream = findViewById(R.id.whippedCream);
        boolean hasWhippedCream = WhCream.isChecked();

        // find if user wants choc
        CheckBox chocolate = findViewById(R.id.chocolate);
        boolean hasChocolate = chocolate.isChecked();

        // find the user's name
        EditText Name = (EditText) findViewById(R.id.insertName);
        String name = Name.getText().toString();

        int price = calculatePrice(hasWhippedCream, hasChocolate);
        String priceMessage = createOrderSummary(price, hasWhippedCream, hasChocolate, name);

        Intent intent = new Intent(Intent.ACTION_SENDTO);
        intent.setData(Uri.parse("mailto:")); // only email apps should handle this
        intent.putExtra(Intent.EXTRA_SUBJECT, getString(R.string.yourOrder) + ", " + name);
        intent.putExtra(Intent.EXTRA_TEXT, priceMessage);
        if (intent.resolveActivity(getPackageManager()) != null) {
            startActivity(intent);
            displayMessage(String.valueOf(calculatePrice(hasWhippedCream, hasChocolate)));
            return;
        }
        displayMessage(priceMessage);
    }

    /**
     * Creates an order summary
     *
     * @param price           of the order
     * @param hasWhippedCream wants or not whipped cream
     * @param hasChocolate    wants or not chocolate
     * @param name            displays the client's name
     * @return text summaryname
     */
    private String createOrderSummary(int price, boolean hasWhippedCream, boolean hasChocolate, String name) {
        String priceMessage = getString(R.string.order_summary_name) + ": " + name;
        priceMessage += "\n" + getString(R.string.withCream) + " " + hasWhippedCream;
        priceMessage += "\n" + getString(R.string.withChoc) + " " + hasChocolate;
        priceMessage += "\n" + getString(R.string.Quantity) + ": " + quantity;
        priceMessage += "\n" + getString(R.string.total) + ": " +
                NumberFormat.getCurrencyInstance().format(price);
        priceMessage += "\n" + getString(R.string.thank_you);
        return priceMessage;
    }

    /**
     * Calculates the price of the order.
     *
     * @ param hasWhippedCream is if user wants cream
     * @ param hasChocolate is if user wants Choc
     * @ return total price
     */
    private int calculatePrice(boolean hasWhippedCream, boolean hasChocolate) {
        int basePrice = 5;

        if (hasWhippedCream) {
            basePrice = basePrice + 1;
        }
        if (hasChocolate) {
            basePrice = basePrice + 2;
        }
        return basePrice * quantity;
    }

    /**
     * This method displays the given quantity value on the screen.
     */
    private void displayQuantity(int numberOfCoffees) {
        TextView quantityTextView = findViewById(R.id.quantity_text_view);
        quantityTextView.setText("" + numberOfCoffees);
    }

    /**
     * This method displays the given text on the screen.
     *
     * @param message display
     */
    private void displayMessage(String message) {
        TextView orderSummaryTextView = findViewById(R.id.order_summary_text_view);
        orderSummaryTextView.setText(message);

    }
}

